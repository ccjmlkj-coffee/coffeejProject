<?php

// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 2.1.7.9
// Generated from `1726210616834.jce'
// **********************************************************************


require_once('jce.php');


class RevenueResourceStatsItem extends c_struct
{
    public $lId;
    public $lValue;

    public function __clone()
    {
        $this->lId = clone $this->lId;
        $this->lValue = clone $this->lValue;
    }

    public function __construct()
    {
        $this->lId = new  c_int64;
        $this->lValue = new  c_int64;
    }

    public function get_class_name()
    {
        return "HUYA.RevenueResourceStatsItem";
    }

    public function write(&$_out,$tag)
    {
        jce_header::_pack_header($_out,'c_struct_begin',$tag);
        $this->lId->write($_out,0);
        $this->lValue->write($_out,1);
        jce_header::_pack_header($_out,'c_struct_end',0);
    }
    public function read(&$_in,$tag,$isRequire = true)
    {
        jce_header::_check_struct($_in,$type,$tag,$isRequire);
        jce_header::_unpack_header($_in,$type,$this_tag);
        $this->lId->read($_in , 0, false);
        $this->lValue->read($_in , 1, false);
        $this->_skip_struct($_in);
    }
}

class RevenueResourceStatsUnit extends c_struct
{
    public $iStatsType;
    public $vItemList;

    public function __clone()
    {
        $this->iStatsType = clone $this->iStatsType;
        $this->vItemList = clone $this->vItemList;
    }

    public function __construct()
    {
        $this->iStatsType = new  c_int;
        $this->vItemList = new  c_vector (new RevenueResourceStatsItem);
    }

    public function get_class_name()
    {
        return "HUYA.RevenueResourceStatsUnit";
    }

    public function write(&$_out,$tag)
    {
        jce_header::_pack_header($_out,'c_struct_begin',$tag);
        $this->iStatsType->write($_out,0);
        $this->vItemList->write($_out,1);
        jce_header::_pack_header($_out,'c_struct_end',0);
    }
    public function read(&$_in,$tag,$isRequire = true)
    {
        jce_header::_check_struct($_in,$type,$tag,$isRequire);
        jce_header::_unpack_header($_in,$type,$this_tag);
        $this->iStatsType->read($_in , 0, false);
        $this->vItemList->read($_in , 1, false);
        $this->_skip_struct($_in);
    }
}

class UserId extends c_struct
{
    public $lUid;
    public $sGuid;
    public $sToken;
    public $sHuYaUA;
    public $sCookie;
    public $iTokenType;
    public $sDeviceInfo;
    public $sQIMEI;

    public function __clone()
    {
        $this->lUid = clone $this->lUid;
        $this->sGuid = clone $this->sGuid;
        $this->sToken = clone $this->sToken;
        $this->sHuYaUA = clone $this->sHuYaUA;
        $this->sCookie = clone $this->sCookie;
        $this->iTokenType = clone $this->iTokenType;
        $this->sDeviceInfo = clone $this->sDeviceInfo;
        $this->sQIMEI = clone $this->sQIMEI;
    }

    public function __construct()
    {
        $this->lUid = new  c_int64;
        $this->sGuid = new  c_string;
        $this->sToken = new  c_string;
        $this->sHuYaUA = new  c_string;
        $this->sCookie = new  c_string;
        $this->iTokenType = new  c_int;
        $this->sDeviceInfo = new  c_string;
        $this->sQIMEI = new  c_string;
    }

    public function get_class_name()
    {
        return "HUYA.UserId";
    }

    public function write(&$_out,$tag)
    {
        jce_header::_pack_header($_out,'c_struct_begin',$tag);
        $this->lUid->write($_out,0);
        $this->sGuid->write($_out,1);
        $this->sToken->write($_out,2);
        $this->sHuYaUA->write($_out,3);
        $this->sCookie->write($_out,4);
        $this->iTokenType->write($_out,5);
        $this->sDeviceInfo->write($_out,6);
        $this->sQIMEI->write($_out,7);
        jce_header::_pack_header($_out,'c_struct_end',0);
    }
    public function read(&$_in,$tag,$isRequire = true)
    {
        jce_header::_check_struct($_in,$type,$tag,$isRequire);
        jce_header::_unpack_header($_in,$type,$this_tag);
        $this->lUid->read($_in , 0, false);
        $this->sGuid->read($_in , 1, false);
        $this->sToken->read($_in , 2, false);
        $this->sHuYaUA->read($_in , 3, false);
        $this->sCookie->read($_in , 4, false);
        $this->iTokenType->read($_in , 5, false);
        $this->sDeviceInfo->read($_in , 6, false);
        $this->sQIMEI->read($_in , 7, false);
        $this->_skip_struct($_in);
    }
}

class GetRevenueResourceStatsRsp extends c_struct
{
    public $vStatsUnit;

    public function __clone()
    {
        $this->vStatsUnit = clone $this->vStatsUnit;
    }

    public function __construct()
    {
        $this->vStatsUnit = new  c_vector (new RevenueResourceStatsUnit);
    }

    public function get_class_name()
    {
        return "HUYA.GetRevenueResourceStatsRsp";
    }

    public function write(&$_out,$tag)
    {
        jce_header::_pack_header($_out,'c_struct_begin',$tag);
        $this->vStatsUnit->write($_out,0);
        jce_header::_pack_header($_out,'c_struct_end',0);
    }
    public function read(&$_in,$tag,$isRequire = true)
    {
        jce_header::_check_struct($_in,$type,$tag,$isRequire);
        jce_header::_unpack_header($_in,$type,$this_tag);
        $this->vStatsUnit->read($_in , 0, false);
        $this->_skip_struct($_in);
    }
}

class GetRevenueResourceStatsReq extends c_struct
{
    public $tId;
    public $iAppId;
    public $iCache;

    public function __clone()
    {
        $this->tId = clone $this->tId;
        $this->iAppId = clone $this->iAppId;
        $this->iCache = clone $this->iCache;
    }

    public function __construct()
    {
        $this->tId = new  UserId;
        $this->iAppId = new  c_int;
        $this->iCache = new  c_int;
    }

    public function get_class_name()
    {
        return "HUYA.GetRevenueResourceStatsReq";
    }

    public function write(&$_out,$tag)
    {
        jce_header::_pack_header($_out,'c_struct_begin',$tag);
        $this->tId->write($_out,0);
        $this->iAppId->write($_out,1);
        $this->iCache->write($_out,2);
        jce_header::_pack_header($_out,'c_struct_end',0);
    }
    public function read(&$_in,$tag,$isRequire = true)
    {
        jce_header::_check_struct($_in,$type,$tag,$isRequire);
        jce_header::_unpack_header($_in,$type,$this_tag);
        $this->tId->read($_in , 0, false);
        $this->iAppId->read($_in , 1, false);
        $this->iCache->read($_in , 2, false);
        $this->_skip_struct($_in);
    }
}


?>
