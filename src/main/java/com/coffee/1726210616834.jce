module HUYA
{

    enum RevenueResourceStatsApp
    {
        EResourceStatsApp_Gift       = 1, // 礼物
        EResourceStatsApp_Mounts     = 2, // 坐骑
        EResourceStatsApp_ActSpecial = 3, // 特效（ActSpecial）
    };
    enum RevenueResourceStatsType
    {
        EResourceStats_GiftCreate       = 100, // 礼物创建
        EResourceStats_GiftSend         = 101, // 礼物赠送
        EResourceStats_GiftFaceu        = 102, // 礼物特效调用（faceu）
        EResourceStats_GiftBackpack     = 103, // 礼物进背包
        EResourceStats_MountsCreate     = 200, // 坐骑创建
        EResourceStats_MountsOwned      = 201, // 坐骑拥有（当前平台内有用户拥有的坐骑）
        EResourceStats_MountsIssue      = 202, // 坐骑下发
        EResourceStats_ActSpecialCreate = 300, // 特效创建
        EResourceStats_ActSpecialSend   = 301, // 特效调用
    };


    struct RevenueResourceStatsItem
    {
        0 optional long lId    = 0; // id（根据App：可为礼物id、坐骑id、特效id）
        1 optional long lValue = 0; // 根据RevenueResourceStatsType可为时间戳（上次送礼、发送特效时间戳、坐骑创建时间）或者 坐骑当前拥有人数
    };

    struct RevenueResourceStatsUnit
    {
        0 optional int                              iStatsType = 0; // 上报营收资源统计类型（需与App对应，详见枚举RevenueResourceStatsType）
        1 optional vector<RevenueResourceStatsItem> vItemList;      // 具体上报数据
    };

    // 用户基本信息
    struct UserId
    {
        0 optional long   lUid       = 0; // 请求用户的yyuid
        1 optional string sGuid;          // 设备ID,唯一id
        2 optional string sToken;         // 票据,
        3 optional string sHuYaUA;        // 平台&版本&渠道&系统版本号 service&1.0.0&servername  ios&1.3.2&store&10.3.2  adr&1.3.2&baidu  web&1.0.0&huya wap&1.0.0&huya
        4 optional string sCookie;        // web端鉴权使用的cookie，其他端可以忽略；值为cookie串,格式为:key=value;key=value;key=value
        5 optional int    iTokenType = 0; // sToken字段的类型，类型不同验证方式不一样；值为ETokenType枚举
        6 optional string sDeviceInfo;    // 机型信息；比如iPhone、Chrome
        7 optional string sQIMEI;         // QIMEI
    };

    struct GetRevenueResourceStatsRsp
    {
        0 optional vector<RevenueResourceStatsUnit> vStatsUnit;
    };

    struct GetRevenueResourceStatsReq
    {
        0 optional UserId tId;
        1 optional int    iAppId = 0; // 查询对应app，见枚举RevenueResourceStatsApp
        2 optional int    iCache = 0; // 查询实时或缓存：0-实时，1-缓存（服务定期缓存本地）
    };


    interface RevenueResourceStatsServant
    {
        int getRevenueResourceStats(HUYA::GetRevenueResourceStatsReq tReq, out HUYA::GetRevenueResourceStatsRsp tRsp);
    };
};
